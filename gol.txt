----------------------------------------------------------------
Rule0: a=e 	Request: c 	base: ['h', 'k'] 
	 ~~~Jeni Feregh c a=e
----------------------------------------------------------------
Rule1: b=d 	Request: c 	base: ['h', 'k'] 
	 ~~~Jeni Feregh c b=d
----------------------------------------------------------------
Rule2: h=a 	Request: c 	base: ['h', 'k'] 
	 ~~~Jeni Feregh c h=a
----------------------------------------------------------------
Rule3: e,g=c 	Request: c 	base: ['h', 'k'] 
	 ######## e ['e', 'g'] 	Base: ['h', 'k']
	 -------------
 	 newRequest: e 
 	 Rule0: a=e 
 	 path: []
		 ######## a ['a'] 	Base: ['h', 'k']
		 -------------
 		 newRequest: a 
 		 Rule0: a=e 
 		 path: []
			 ~~~Jeni Feregh a a=e
		 Failed: True 	 newPath: []
		 -------------
 		 newRequest: a 
 		 Rule1: b=d 
 		 path: []
			 ~~~Jeni Feregh a b=d
		 Failed: True 	 newPath: []
		 -------------
 		 newRequest: a 
 		 Rule2: h=a 
 		 path: []
			 <<<<<<<<<<request= a 
 			 Rule= h=a 
 			 path: [] 2 )
		 Failed: False 	 newPath: [2]
		 ::found a from Rule2: h=a 
 		 ::Added to path: [2, 0]
	 Failed: False 	 newPath: [2, 0]
	 ::found e from Rule0: a=e 
 	 ::Added to path: [2, 0, 3]
	 ######## g ['e', 'g'] 	Base: ['h', 'k', 'e']
	 -------------
 	 newRequest: g 
 	 Rule0: a=e 
 	 path: [2, 0, 3]
		 ~~~Jeni Feregh g a=e
	 Failed: True 	 newPath: [2, 0, 3]
	 -------------
 	 newRequest: g 
 	 Rule1: b=d 
 	 path: [2, 0, 3]
		 ~~~Jeni Feregh g b=d
	 Failed: True 	 newPath: [2, 0, 3]
	 -------------
 	 newRequest: g 
 	 Rule2: h=a 
 	 path: [2, 0, 3]
		 ~~~Jeni Feregh g h=a
	 Failed: True 	 newPath: [2, 0, 3]
	 -------------
 	 newRequest: g 
 	 Rule3: e,g=c 
 	 path: [2, 0, 3]
		 ~~~Jeni Feregh g e,g=c
	 Failed: True 	 newPath: [2, 0, 3]
	 -------------
 	 newRequest: g 
 	 Rule4: e,k=b 
 	 path: [2, 0, 3]
		 ~~~Jeni Feregh g e,k=b
	 Failed: True 	 newPath: [2, 0, 3]
	 -------------
 	 newRequest: g 
 	 Rule5: d,e,k=c 
 	 path: [2, 0, 3]
		 ~~~Jeni Feregh g d,e,k=c
	 Failed: True 	 newPath: [2, 0, 3]
	 -------------
 	 newRequest: g 
 	 Rule6: g,k,f=a 
 	 path: [2, 0, 3]
		 ~~~Jeni Feregh g g,k,f=a
	 Failed: True 	 newPath: [2, 0, 3]
\\\\\famma mochkel
----------------------------------------------------------------
Rule4: e,k=b 	Request: c 	base: ['h', 'k'] 
	 ~~~Jeni Feregh c e,k=b
----------------------------------------------------------------
Rule5: d,e,k=c 	Request: c 	base: ['h', 'k'] 
	 ######## d ['d', 'e'] 	Base: ['h', 'k']
	 -------------
 	 newRequest: d 
 	 Rule0: a=e 
 	 path: []
		 ~~~Jeni Feregh d a=e
	 Failed: True 	 newPath: []
	 -------------
 	 newRequest: d 
 	 Rule1: b=d 
 	 path: []
		 ######## b ['b'] 	Base: ['h', 'k']
		 -------------
 		 newRequest: b 
 		 Rule0: a=e 
 		 path: []
			 ~~~Jeni Feregh b a=e
		 Failed: True 	 newPath: []
		 -------------
 		 newRequest: b 
 		 Rule1: b=d 
 		 path: []
			 ~~~Jeni Feregh b b=d
		 Failed: True 	 newPath: []
		 -------------
 		 newRequest: b 
 		 Rule2: h=a 
 		 path: []
			 ~~~Jeni Feregh b h=a
		 Failed: True 	 newPath: []
		 -------------
 		 newRequest: b 
 		 Rule3: e,g=c 
 		 path: []
			 ~~~Jeni Feregh b e,g=c
		 Failed: True 	 newPath: []
		 -------------
 		 newRequest: b 
 		 Rule4: e,k=b 
 		 path: []
			 ######## e ['e'] 	Base: ['h', 'k']
			 -------------
 			 newRequest: e 
 			 Rule0: a=e 
 			 path: []
				 ######## a ['a'] 	Base: ['h', 'k']
				 -------------
 				 newRequest: a 
 				 Rule0: a=e 
 				 path: []
					 ~~~Jeni Feregh a a=e
				 Failed: True 	 newPath: []
				 -------------
 				 newRequest: a 
 				 Rule1: b=d 
 				 path: []
					 ~~~Jeni Feregh a b=d
				 Failed: True 	 newPath: []
				 -------------
 				 newRequest: a 
 				 Rule2: h=a 
 				 path: []
					 <<<<<<<<<<request= a 
 					 Rule= h=a 
 					 path: [] 2 )
				 Failed: False 	 newPath: [2]
				 ::found a from Rule2: h=a 
 				 ::Added to path: [2, 0]
			 Failed: False 	 newPath: [2, 0]
			 ::found e from Rule0: a=e 
 			 ::Added to path: [2, 0, 4]
		 Failed: False 	 newPath: [2, 0, 4]
		 ::found b from Rule4: e,k=b 
 		 ::Added to path: [2, 0, 4, 1]
	 Failed: False 	 newPath: [2, 0, 4, 1]
	 ::found d from Rule1: b=d 
 	 ::Added to path: [2, 0, 4, 1, 5]
	 ######## e ['d', 'e'] 	Base: ['h', 'k', 'd']
	 -------------
 	 newRequest: e 
 	 Rule0: a=e 
 	 path: [2, 0, 4, 1, 5]
		 ######## a ['a'] 	Base: ['h', 'k', 'd']
		 -------------
 		 newRequest: a 
 		 Rule0: a=e 
 		 path: [2, 0, 4, 1, 5]
			 ~~~Jeni Feregh a a=e
		 Failed: True 	 newPath: [2, 0, 4, 1, 5]
		 -------------
 		 newRequest: a 
 		 Rule1: b=d 
 		 path: [2, 0, 4, 1, 5]
			 ~~~Jeni Feregh a b=d
		 Failed: True 	 newPath: [2, 0, 4, 1, 5]
		 -------------
 		 newRequest: a 
 		 Rule2: h=a 
 		 path: [2, 0, 4, 1, 5]
			 <<<<<<<<<<request= a 
 			 Rule= h=a 
 			 path: [2, 0, 4, 1, 5] 2 )
		 Failed: False 	 newPath: [2, 0, 4, 1, 5]
		 ::found a from Rule2: h=a 
 		 ::Added to path: [2, 0, 4, 1, 5]
	 Failed: False 	 newPath: [2, 0, 4, 1, 5]
	 ::found e from Rule0: a=e 
 	 ::Added to path: [2, 0, 4, 1, 5]
New Minpath: [2, 0, 4, 1, 5] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
----------------------------------------------------------------
Rule6: g,k,f=a 	Request: c 	base: ['h', 'k'] 
	 ~~~Jeni Feregh c g,k,f=a
.
.
.
minpath:  [2, 0, 4, 1, 5] 

file and function name in reverse get it? cause this is backwards chaining 9adechni dhamer 
